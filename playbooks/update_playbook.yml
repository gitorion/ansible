---
- name: update playbook
  hosts: "{{ hostname }}"
  become: true
  vars_files:
    - vars/default.yml  
  tasks:

  # Upgrade older system packages

    - name: apt upgrade for older distributions
      ansible.builtin.apt:
        state: latest
        name: "{{ item }}"
      with_items:
        - python3
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == 'Linux Mint'
  
    - name: dnf upgrade for older distributions
      ansible.builtin.yum:
        state: latest
        name: "{{ item }}"
      with_items:
        - dnf
        - dnf-plugins-core
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'Fedora' or ansible_distribution == 'RedHat' or ansible_distribution == 'AlmaLinux'

  # Update system packages

    - name: Update system packages
      ansible.builtin.apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 3600
        state: latest
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == 'Linux Mint'

    - name: Update system packages
      ansible.builtin.dnf:
        name: "*"
        update_cache: yes
        state: latest
        skip_broken: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'Fedora' or ansible_distribution == 'RedHat' or ansible_distribution == 'AlmaLinux'

  # Install specified packages
 
    - name: Add specified repositories in dnf
      ansible.builtin.dnf:
        name: epel-release,elrepo-release
        state: latest
        skip_broken: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat' or ansible_distribution == 'AlmaLinux'

    - name: Check GnuPG is installed
      ansible.builtin.apt:
        name: gnupg2
        state: latest
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Linux Mint' or ansible_distribution == 'Ubuntu'

    - name: Download teleport public key
      ansible.builtin.apt_key:
        url: https://deb.releases.teleport.dev/teleport-pubkey.asc
        state: present
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == 'Linux Mint'

    - name: Add specified repositories in apt      
      ansible.builtin.apt_repository:
        repo: deb https://deb.releases.teleport.dev/ stable main
        state: present
        install_python_apt: yes
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == 'Linux Mint'

    - name: Add specified repositories in apt      
      ansible.builtin.apt_repository:
        repo: deb http://deb.debian.org/debian buster-backports main contrib non-free
        state: present
      when: ansible_distribution == 'Debian'

    - name: Add teleport repo to dnf
      ansible.builtin.command: dnf config-manager --add-repo https://rpm.releases.teleport.dev/teleport.repo
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'Fedora' or ansible_distribution == 'RedHat' or ansible_distribution == 'AlmaLinux'           

    - name: Installing required system packages apt
      ansible.builtin.apt:
        name: "{{ sys_packages }}"
        state: latest
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == 'Linux Mint'

    - name: Installing required system packages dnf
      ansible.builtin.dnf:
        name: "{{ sys_dnf_packages }}"
        state: latest
        skip_broken: yes
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat' or ansible_distribution == 'AlmaLinux'

    - name: Installing required system packages dnf
      ansible.builtin.dnf:
        name: "{{ sys_fedora_dnf_packages }}"
        state: latest
        skip_broken: yes
      when: ansible_distribution == 'Fedora'

  # System reboot

    - name: Rebooting the system to complete updates
      reboot: